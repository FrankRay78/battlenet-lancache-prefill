name: Pipeline
on: [push]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: >
        cd BattleNetPrefill.Test;
        dotnet test --no-restore -c Release --filter "FullyQualifiedName!=BattleNetPrefill.Test.LogFileUpToDateTests&FullyQualifiedName!=BattleNetPrefill.Test.DownloadTests"
  infersharp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Build
      run: dotnet build -c Debug
    - name: Run Infer#      
      uses: microsoft/infersharpaction@v1.3.1
      id: runinfersharp
      with:
        binary-path: BattleNetPrefill/bin/Debug/net6.0
        optional-flags: --enable-null-dereference --enable-dotnet-resource-leak --enable-thread-safety-violation
    - name: Upload SARIF output to GitHub Security Center
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: infer-out/report.sarif    
  Sonar-Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan     
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        with:
          # Additional arguments for the sonarcloud scanner
          args:             
            -Dsonar.projectKey=tpill90_Battlenet-lancache-prefill
            -Dsonar.organization=tpill90